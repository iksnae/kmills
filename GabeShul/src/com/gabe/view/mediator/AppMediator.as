package com.gabe.view.mediator{	import com.gabe.control.event.GabeShuEvent;	import com.gabe.model.IStylable;	import com.greensock.TweenMax;		import flash.events.Event;		import org.puremvc.as3.interfaces.INotification;	import org.puremvc.as3.patterns.mediator.Mediator;
		public class AppMediator extends Mediator	{		static public const NAME:String = "AppMediator";				public function AppMediator(viewComponent:GabeShul)		{			super(NAME, viewComponent);				}		public function get view():GabeShul		{			return viewComponent as GabeShul;		}								//////////////////////////////////////////////////////////////////////////		//	IMPLEMENTATIONS														//		//////////////////////////////////////////////////////////////////////////		override public function listNotificationInterests():Array		{			return [				GabeShuEvent.THEME_CHANGE,				GabeShuEvent.STAGE_RESIZE,				GabeShuEvent.SECTION_CHANGE			];		}		override public function handleNotification(notification:INotification):void		{			switch(notification.getName())			{				case GabeShuEvent.THEME_CHANGE:					view.changeStyle(notification.getBody() as int);					break;				case GabeShuEvent.STAGE_RESIZE:					view.resize();					break;				case GabeShuEvent.SECTION_CHANGE:					if(notification.getBody()=="contact")					{						TweenMax.to(view.footer,1,{alpha:1})					}					else					{						TweenMax.to(view.footer,1,{alpha:0})					}					break;			}		}	}}